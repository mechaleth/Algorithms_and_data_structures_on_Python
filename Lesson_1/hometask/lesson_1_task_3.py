# Написать программу, которая генерирует в указанных пользователем границах:
# 		 a. случайное целое число,
# 		 b. случайное вещественное число,
# 		 c. случайный символ.
# Для каждого из трех случаев пользователь задает свои границы диапазона.
# Например, если надо получить случайный символ от 'a' до 'f', то вводятся эти символы.
# Программа должна вывести на экран любой символ алфавита от 'a' до 'f' включительно.
import random

# В этом задании использована опция "идеального пользователя" из формулировки к домашним заданиям.
# Но если добавлять проверку правильности введённых границ, я бы просто поменял бы
# границы местами, а не выдавал сообщение об ошибке.

# Начало
# Ввод типа генерации gen_type:
#	-> для случайного целого числа введите "a",
#	-> для случайного вещественного числа введите "b",
#	-> для случайного символа введите "c"
gen_type = input("Типы генерации:\n"
                 "-> для случайного целого числа введите 'a',\n"
                 "-> для случайного вещественного числа введите 'b',\n"
                 "-> для случайного символа введите 'c'\n"
                 "введите тип генерации: ")
# Если  gen_type == "a":
if gen_type == 'a':
    #	Ввод целочисленных верхней границы max и нижней границы min диапазона для генерации
    min_value = int(input("Ввод целочисленную нижнюю границу диапазона для генерации "))
    max_value = int(input("Ввод целочисленную верхнюю границу диапазона для генерации "))
    #	Генерация целого случайного числа rand_num в диапазоне от min до max
    rand_num = random.randint(min_value, max_value)
    #	Вывод rand_num
    print(f'Случайное целое число в диапазоне [{min_value};{max_value}]: {rand_num}')
# Иначе если gen_type == "b":
elif gen_type == 'b':
    # 	Ввод десятичных значений верхней границы max и  нижней границы min диапазона для генерации
    min_value = float(input("Ввод десятичную нижнюю границу диапазона для генерации "))
    max_value = float(input("Ввод десятичную верхнюю границу диапазона для генерации "))
    #   Генерация десятичного случайного числа rand_num в диапазоне от min до max
    rand_num = random.uniform(min_value, max_value)
    #	Вывод rand_num
    print(f'Случайное десятичное число в диапазоне [{min_value};{max_value}]: {rand_num}')
# Иначе если gen_type == "c":
elif gen_type == 'c':
    #	Ввод символов верхней границы symb_max и нижней границы symb_min диапазона для генерации
    symb_min = input("Ввод символа для нижней границы диапазона для генерации ")
    symb_max = input("Ввод символа для верхней границы диапазона для генерации ")
    # Получение номера символа max_value для symb_max в ASCII
    # Получение номера символа min_value для symb_min в ASCII
    min_value, max_value = ord(symb_min), ord(symb_max)
    #	Генерация случайного номера rand_char_ord в диапазоне индексов от min_value до max_value
    rand_char_ord = random.randint(min_value, max_value)
    # получение символа rand_symb для номера rand_char_ord в ASCII
    rand_symb = chr(rand_char_ord)
    #	Вывод rand_symb
    print(f'Случайный символ в диапазоне [{symb_min};{symb_max}]: {rand_symb}')
# Иначе:
else:
    #   вывод сообщения об ошибке
    print("Введён некорректный символ")
# Конец
